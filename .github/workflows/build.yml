name: Build-Test-Publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 14 * * *'  # This schedule runs every day at 9 AM Chicago time (14:00 UTC)


concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

jobs:

  build-test-publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: "Display runs-on Details and Install Build Dependencies"
      run: |
        set -x
        lscpu
        free -h
        df -h
        docker version
        python --version
        whoami
        pip install selenium docker

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
  
    - name: Build App Builder Docker image (Unit Tests, Security Checks, Compliance, Wheels)
      run: |
        docker buildx build \
        --target builder \
        --tag simple-task-app-builder:latest \
        .

    - name: Build the Application Docker image
      run: |
        docker buildx build \
        --target application \
        --tag ${{ vars.DOCKERHUB_USERNAME }}/simple-task-app:latest \
        --tag ${{ vars.DOCKERHUB_USERNAME }}/simple-task-app:${{ steps.vars.outputs.sha_short }} \
        .

    - name: Selenium
      run: |
        cd app/
        IMAGE=${{ vars.DOCKERHUB_USERNAME }}/simple-task-app:latest python -m unittest test_selenium.py --verbose

    - name: ClamAV Scan Application Image
      run: |
        docker build \
        --build-arg base_image=${{ vars.DOCKERHUB_USERNAME }}/simple-task-app:latest \
        --rm \
        --file Dockerfile-clamav.dockerfile \
        --tag clamav-${{ steps.vars.outputs.sha_short }} \
        .
    
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Push Docker Images
      run: |
        docker push ${{ vars.DOCKERHUB_USERNAME }}/simple-task-app:latest
        docker push ${{ vars.DOCKERHUB_USERNAME }}/simple-task-app:${{ steps.vars.outputs.sha_short }}
